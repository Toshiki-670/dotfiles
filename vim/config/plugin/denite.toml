[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
  let g:unite_source_file_mru_limit = 192


  nmap [denite] <Nop>
  map <Space>d [denite]
  " プロジェクト内のファイル検索
  nmap <silent> [denite]f :<C-u>Denite file/rec<CR>
  " プロジェクト内の検索
  nmap <silent> [denite]g :<C-u>Denite grep<CR>
  " カーソル下の検索
  nmap <silent> [denite]* :<C-u>DeniteCursorWord grep<CR>
  " バッファに展開中のファイル検索
  nmap <silent> [denite]b :<C-u>Denite buffer<CR>
  " ファイル内の関数/クラス等の検索
  nmap <silent> [denite]o :<C-u>Denite outline<CR>


" Define mappings
autocmd FileType denite call s:denite_my_settings()
function! s:denite_my_settings() abort
  nnoremap <silent><buffer><expr> <CR>
  \ denite#do_map('do_action')
  nnoremap <silent><buffer><expr> d
  \ denite#do_map('do_action', 'delete')
  nnoremap <silent><buffer><expr> p
  \ denite#do_map('do_action', 'preview')
  nnoremap <silent><buffer><expr> q
  \ denite#do_map('quit')
  nnoremap <silent><buffer><expr> i
  \ denite#do_map('open_filter_buffer')
  nnoremap <silent><buffer><expr> <Space>
  \ denite#do_map('toggle_select').'j'
endfunction



autocmd FileType denite-filter call s:denite_filter_my_settings()
function! s:denite_filter_my_settings() abort
  imap <silent><buffer> <C-o> <Plug>(denite_filter_quit)
endfunction

" Change file/rec command.
call denite#custom#var('file/rec', 'command',
\ ['ag', '--follow', '--nocolor', '--nogroup', '-g', ''])

" For ripgrep
" Note: It is slower than ag
call denite#custom#var('file/rec', 'command',
\ ['rg', '--files', '--glob', '!.git'])

" For Pt(the platinum searcher)
" NOTE: It also supports windows.
call denite#custom#var('file/rec', 'command',
\ ['pt', '--follow', '--nocolor', '--nogroup',
\  (has('win32') ? '-g:' : '-g='), ''])

" For python script scantree.py
" Read bellow on this file to learn more about scantree.py
call denite#custom#var('file/rec', 'command',
\ ['scantree.py', '--path', ':directory'])

" Change matchers.
call denite#custom#source(
\ 'file_mru', 'matchers', ['matcher/fuzzy', 'matcher/project_files'])
call denite#custom#source(
\ 'file/rec', 'matchers', ['matcher/cpsm'])

" Change sorters.
call denite#custom#source(
\ 'file/rec', 'sorters', ['sorter/sublime'])

" Change default action.
call denite#custom#kind('file', 'default_action', 'split')

" Add custom menus
let s:menus = {}

let s:menus.zsh = {
	\ 'description': 'Edit your import zsh configuration'
	\ }

let s:menus.zsh.file_candidates = [
	\ ['zshrc', '~/.config/zsh/.zshrc'],
	\ ['zshenv', '~/.zshenv'],
	\ ]

let s:menus.my_commands = {
	\ 'description': 'Example commands'
	\ }

let s:menus.my_commands.command_candidates = [
	\ ['Split the window', 'vnew'],
	\ ['Open zsh menu', 'Denite menu:zsh'],
	\ ['Format code', 'FormatCode', 'go,python'],
	\ ]

call denite#custom#var('menu', 'menus', s:menus)

" Ag command on grep source
call denite#custom#var('grep', 'command', ['ag'])
call denite#custom#var('grep', 'default_opts',
		\ ['-i', '--vimgrep'])
call denite#custom#var('grep', 'recursive_opts', [])
call denite#custom#var('grep', 'pattern_opt', [])
call denite#custom#var('grep', 'separator', ['--'])
call denite#custom#var('grep', 'final_opts', [])

" Ack command on grep source
call denite#custom#var('grep', 'command', ['ack'])
call denite#custom#var('grep', 'default_opts',
		\ ['--ackrc', $HOME.'/.ackrc', '-H', '-i',
		\  '--nopager', '--nocolor', '--nogroup', '--column'])
call denite#custom#var('grep', 'recursive_opts', [])
call denite#custom#var('grep', 'pattern_opt', ['--match'])
call denite#custom#var('grep', 'separator', ['--'])
call denite#custom#var('grep', 'final_opts', [])

" Ripgrep command on grep source
call denite#custom#var('grep', 'command', ['rg'])
call denite#custom#var('grep', 'default_opts',
		\ ['-i', '--vimgrep', '--no-heading'])
call denite#custom#var('grep', 'recursive_opts', [])
call denite#custom#var('grep', 'pattern_opt', ['--regexp'])
call denite#custom#var('grep', 'separator', ['--'])
call denite#custom#var('grep', 'final_opts', [])

" Pt command on grep source
call denite#custom#var('grep', 'command', ['pt'])
call denite#custom#var('grep', 'default_opts',
		\ ['-i', '--nogroup', '--nocolor', '--smart-case'])
call denite#custom#var('grep', 'recursive_opts', [])
call denite#custom#var('grep', 'pattern_opt', [])
call denite#custom#var('grep', 'separator', ['--'])
call denite#custom#var('grep', 'final_opts', [])

" jvgrep command on grep source
call denite#custom#var('grep', 'command', ['jvgrep'])
call denite#custom#var('grep', 'default_opts', ['-i'])
call denite#custom#var('grep', 'recursive_opts', ['-R'])
call denite#custom#var('grep', 'pattern_opt', [])
call denite#custom#var('grep', 'separator', [])
call denite#custom#var('grep', 'final_opts', [])

" Specify multiple paths in grep source
"call denite#start([{'name': 'grep',
"      \ 'args': [['a.vim', 'b.vim'], '', 'pattern']}])

" Define alias
call denite#custom#alias('source', 'file/rec/git', 'file/rec')
call denite#custom#var('file/rec/git', 'command',
      \ ['git', 'ls-files', '-co', '--exclude-standard'])

call denite#custom#alias('source', 'file/rec/py', 'file/rec')
call denite#custom#var('file/rec/py', 'command',
\ ['scantree.py', '--path', ':directory'])

" Change ignore_globs
call denite#custom#filter('matcher/ignore_globs', 'ignore_globs',
      \ [ '.git/', '.ropeproject/', '__pycache__/',
      \   'venv/', 'images/', '*.min.*', 'img/', 'fonts/'])

" Custom action
" Note: lambda function is not supported in Vim8.
call denite#custom#action('file', 'test',
      \ {context -> execute('let g:foo = 1')})
call denite#custom#action('file', 'test2',
      \ {context -> denite#do_action(
      \  context, 'open', context['targets'])})


  "denite時に使用するキーマップ
  "ESCキーでdeniteを終了
  "call denite#custom#map('insert', '<esc>', '<denite:enter_mode:normal>', 'noremap')
  "call denite#custom#map('normal', '<esc>', '<denite:quit>', 'noremap')
  " 上下移動を<C-N>, <C-P>
  "call denite#custom#map('normal', '<C-N>', '<denite:move_to_next_line>')
  "call denite#custom#map('normal', '<C-P>', '<denite:move_to_previous_line>')
  "call denite#custom#map('insert', '<C-N>', '<denite:move_to_next_line>')
  "call denite#custom#map('insert', '<C-P>', '<denite:move_to_previous_line>')
  " 入力履歴移動を<C-J>, <C-K>
  "call denite#custom#map('insert', '<C-J>', '<denite:assign_next_text>')
  "call denite#custom#map('insert', '<C-K>', '<denite:assign_previous_text>')
  " 横割りオープンを`<C-S>`
  "call denite#custom#map('insert', '<C-S>', '<denite:do_action:split>')
  " 縦割りオープンを`<C-I>`
  "call denite#custom#map('insert', '<C-V>', '<denite:do_action:vsplit>')
  " タブオープンを`<C-O>`
  "call denite#custom#map('insert', '<C-O>', '<denite:do_action:tabopen>')


  "grepでagを使用するように設定
  "call denite#custom#var('grep', 'command', ['ag'])
  "カレントディレクトリ内の検索もagを使用する
  "call denite#custom#var('file_rec', 'command', ['ag', '--follow', '--nocolor', '--nogroup', '-g', ''])
  "その他のgrepの設定
  "call denite#custom#var('grep', 'default_opts',['-i', '--vimgrep'])
  "call denite#custom#var('grep', 'recursive_opts', [])
  "call denite#custom#var('grep', 'pattern_opt', [])
  "call denite#custom#var('grep', 'separator', ['--'])
  "call denite#custom#var('grep', 'final_opts', [])
'''

[[plugins]]
repo = 'iyuuya/denite-rails'
hook_add = '''
  nnoremap [rails] <Nop>
  nmap     <Space>r [rails]
  nnoremap <silent> [rails]r   :<C-u>Denite<Space>rails:dwim<Return>
  nnoremap <silent> [rails]m   :<C-u>Denite<Space>rails:model<Return>
  nnoremap <silent> [rails]c   :<C-u>Denite<Space>rails:controller<Return>
  nnoremap <silent> [rails]v   :<C-u>Denite<Space>rails:view<Return>
  nnoremap <silent> [rails]a   :<C-u>Denite<Space>rails:asset<Return>
  nnoremap <silent> [rails]h   :<C-u>Denite<Space>rails:helper<Return>
  nnoremap <silent> [rails]t   :<C-u>Denite<Space>rails:test<Return>
  nnoremap <silent> [rails]s   :<C-u>Denite<Space>rails:spec<Return>
  nnoremap <silent> [rails]d   :<C-u>Denite<Space>rails:db<Return>
  nnoremap <silent> [rails]co  :<C-u>Denite<Space>rails:config<Return>
'''

