#!/bin/bash
# Respect
# https://github.com/b4b4r07/dotfiles/blob/master/.tmux/bin/wifi
# https://shellscript.sunone.me/parameter.html

CMDNAME=`basename $0`

while getopts npc: OPT
do
  case $OPT in
    "n" ) set_name="TRUE" ;;
    "p" ) set_percent="TRUE" ;;
    "c" ) set_color="TRUE" ; color_name="$OPTARG" ;;
      * ) echo "Usage: $CMDNAME [-n] [-p] [-c VALUE]" 1>&2
          exit 1 ;;
  esac
done


airport_path="/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport"

# Check if airport is available
if [[ ! -x $airport_path ]]; then
  echo "$airport_path: not found" 1>&2
  exit 1
fi

# The Unicode Block Elements
# | Unicode | Block |           Name             |    Note    |
# |:-------:|:-----:|:--------------------------:|:----------:|
# |  2580   |  ▀    | UPPER HALF BLOCK           |            |
# |  2581   |  ▁    | LOWER ONE EIGHTH BLOCK     |            |
# |  2582   |  ▂    | LOWER ONE QUARTER BLOCK    |            |
# |  2583   |  ▃    | LOWER THREE EIGHTHS BLOCK  |            |
# |  2584   |  ▄    | LOWER HALF BLOCK           |            |
# |  2585   |  ▅    | LOWER FIVE EIGHTHS BLOCK   |            |
# |  2586   |  ▆    | LOWER THREE QUARTERS BLOCK |            |
# |  2587   |  ▇    | LOWER SEVEN EIGHTHS BLOCK  |            |
# |  2588   |  █    | FULL BLOCK                 | →25A0(■)   |
# |  2589   |  ▉    | LEFT SEVEN EIGHTHS BLOCK   |            |
# |  258A   |  ▊    | LEFT THREE QUARTERS BLOCK  |            |
# |  258B   |  ▋    | LEFT FIVE EIGHTHS BLOCK    |            |
# |  258C   |  ▌    | LEFT HALF BLOCK            |            |
# |  258D   |  ▍    | LEFT THREE EIGHTHS BLOCK   |            |
# |  258E   |  ▎    | LEFT ONE QUARTER BLOCK     |            |
# |  258F   |  ▏    | LEFT ONE EIGHTH BLOCK      |            |
# |  2590   |  ▐    | RIGHT HALF BLOCK           |            |
#
signals=(▂ ▃ ▄ ▅ ▆ ▇)

# Get the wifi information and then set it to an info array
info=( $(eval "$airport_path" --getinfo | grep -E "^ *(agrCtlRSSI|state|lastTxRate|SSID):" | awk '{print $2}') )
if [[ ${#info[@]} -eq 0 ]]; then
  echo "Offline"
  exit 1
fi

# cut out a needed information from the info
# reference: http://osxdaily.com/2007/01/18/airport-the-little-known-command-line-wireless-utility/
rssi="${info[0]}"   # strength of wifi wave
stat="${info[1]}"   # whether wifi is available
rate="${info[2]}"   # bandwidth of wifi wave
ssid=""
if [ "${set_name}" = "TRUE" ]; then
  ssid="${info[3]}"   # wifi ssid name
fi

# If the wifi rate (wifi bandwidth) is unavailable,
if [ "$rate" = 0 ]; then
  echo "no_wifi"
  exit 1
fi

# Determine the signal from rssi of wifi
signal=""
for ((j = 0; j < "${#signals[@]}"; j++))
do
  # reference of strength (rssi)
  #  -20　Excellent
  #  -30　Excellent
  #  -40　Excellent
  #  -50　Excellent
  #  -60　better
  #  -70　good
  #  -80　not good
  #  -90　bad
  # -100　bad
  if ((  $j == 0 && $rssi >= -100 )) ||
    (( $j == 1 && $rssi >= -90  )) ||
    (( $j == 2 && $rssi >= -80  )) ||
    (( $j == 3 && $rssi >= -70  )) ||
    (( $j == 4 && $rssi >= -60  )) ||
    (( $j == 5 && $rssi >= -50  )); then
    # make signal
    signal="${signal}${signals[$j]}"
  fi
done

percent=""
if [ "${set_percent}" = "TRUE" ]; then
  if [ -100 -gt $rssi ]; then
    percent=0
  else
    # -100~-50の範囲をパーセントで表現
    p=$((($rssi + 100) * 2))
    if [ $p -le 100 ]; then
      percent=$p
    else
      percent=100
    fi
  fi
  percent="${percent}% "
fi

begin_color=""
end_color=""
if [ "${set_color}" = "TRUE" ]; then
  begin_color="#[fg=${color_name}]"
  end_color="#[default]"
fi

# Outputs wifi
echo -e "${begin_color}${ssid} ${rate}Mbs ${percent}${signal}${end_color}"
